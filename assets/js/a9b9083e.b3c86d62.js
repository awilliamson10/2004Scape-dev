"use strict";(self.webpackChunk_2004_scape_dev=self.webpackChunk_2004_scape_dev||[]).push([[8006],{9101:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"Sidebar":[{"type":"link","label":"Welcome to 2004Scape","href":"/2004scape-dev/intro","docId":"intro","unlisted":false},{"type":"category","label":"Server Development","collapsed":false,"items":[{"type":"link","label":"Server Overview","href":"/2004scape-dev/server/overview","docId":"server/overview","unlisted":false},{"type":"category","label":"Architecture","collapsed":true,"items":[{"type":"link","label":"Architecture Overview","href":"/2004scape-dev/server/architecture/overview","docId":"server/architecture/overview","unlisted":false},{"type":"link","label":"Component Architecture","href":"/2004scape-dev/server/architecture/components","docId":"server/architecture/components","unlisted":false},{"type":"link","label":"Data Flow Architecture","href":"/2004scape-dev/server/architecture/data-flow","docId":"server/architecture/data-flow","unlisted":false},{"type":"link","label":"Deployment Architecture","href":"/2004scape-dev/server/architecture/deployment","docId":"server/architecture/deployment","unlisted":false}],"collapsible":true},{"type":"category","label":"Core Concepts","collapsed":true,"items":[{"type":"link","label":"RuneScript Language","href":"/2004scape-dev/server/core-concepts/runescript","docId":"server/core-concepts/runescript","unlisted":false},{"type":"link","label":"Game Engine","href":"/2004scape-dev/server/core-concepts/game-engine","docId":"server/core-concepts/game-engine","unlisted":false},{"type":"link","label":"Network Protocol","href":"/2004scape-dev/server/core-concepts/network-protocol","docId":"server/core-concepts/network-protocol","unlisted":false},{"type":"link","label":"Database Models","href":"/2004scape-dev/server/core-concepts/database-models","docId":"server/core-concepts/database-models","unlisted":false}],"collapsible":true},{"type":"category","label":"Components","collapsed":true,"items":[{"type":"link","label":"World System","href":"/2004scape-dev/server/components/world-system","docId":"server/components/world-system","unlisted":false},{"type":"link","label":"Server Components","href":"/2004scape-dev/server/components/server-components","docId":"server/components/server-components","unlisted":false},{"type":"link","label":"Content Systems","href":"/2004scape-dev/server/components/content-systems","docId":"server/components/content-systems","unlisted":false},{"type":"link","label":"Cache Management","href":"/2004scape-dev/server/components/cache-management","docId":"server/components/cache-management","unlisted":false}],"collapsible":true},{"type":"category","label":"RuneScript","collapsed":true,"items":[{"type":"link","label":"Introduction to RuneScript","href":"/2004scape-dev/server/runescript/introduction","docId":"server/runescript/introduction","unlisted":false}],"collapsible":true},{"type":"category","label":"API Reference","collapsed":true,"items":[{"type":"link","label":"Engine API","href":"/2004scape-dev/server/api/engine-api","docId":"server/api/engine-api","unlisted":false},{"type":"link","label":"RuneScript API","href":"/2004scape-dev/server/api/runescript-api","docId":"server/api/runescript-api","unlisted":false},{"type":"link","label":"Database API","href":"/2004scape-dev/server/api/database-api","docId":"server/api/database-api","unlisted":false},{"type":"link","label":"Network API","href":"/2004scape-dev/server/api/network-api","docId":"server/api/network-api","unlisted":false}],"collapsible":true}],"collapsible":true},{"type":"link","label":"Documentation Style Guide","href":"/2004scape-dev/style-guide","docId":"style-guide","unlisted":false}]},"docs":{"contributing":{"id":"contributing","title":"Contributing to 2004Scape","description":"Thank you for your interest in contributing to the 2004Scape project! This guide will help you understand how to effectively contribute to this open-source RuneScape 2 emulation project."},"index":{"id":"index","title":"Welcome to 2004Scape","description":"2004Scape is an open-source RuneScape 2 emulation project that aims to recreate the game as it was in May 18, 2004. This documentation will help you get started with contributing to the project."},"intro":{"id":"intro","title":"Welcome to 2004Scape","description":"2004Scape is an open-source RuneScape 2 emulation project that aims to recreate the game as it was in May 18, 2004. This documentation will help you get started with contributing to the project.","sidebar":"Sidebar"},"server/api/database-api":{"id":"server/api/database-api","title":"Database API","description":"The Database API provides interfaces for interacting with the player and game data persistence layer. This document describes the available database interfaces and how to use them.","sidebar":"Sidebar"},"server/api/engine-api":{"id":"server/api/engine-api","title":"Engine API","description":"The Engine API provides interfaces for interacting with the core game engine, including entity management, world state, and game logic. This document describes the available APIs and how to use them.","sidebar":"Sidebar"},"server/api/network-api":{"id":"server/api/network-api","title":"Network API","description":"The Network API provides interfaces for managing client-server communication, handling packets, and implementing the RuneScape network protocol. This document describes the available network interfaces and how to use them.","sidebar":"Sidebar"},"server/api/runescript-api":{"id":"server/api/runescript-api","title":"RuneScript API","description":"The RuneScript API provides interfaces for accessing and manipulating game elements from RuneScript code. This document describes the available command functions and procedures that can be used in RuneScript.","sidebar":"Sidebar"},"server/architecture/components":{"id":"server/architecture/components","title":"Component Architecture","description":"This document provides detailed information about the major components of the Lost City Server and how they interact with each other.","sidebar":"Sidebar"},"server/architecture/data-flow":{"id":"server/architecture/data-flow","title":"Data Flow Architecture","description":"This document explains how data flows through the Lost City Server system during different operations and gameplay scenarios.","sidebar":"Sidebar"},"server/architecture/deployment":{"id":"server/architecture/deployment","title":"Deployment Architecture","description":"This document describes how the Lost City Server can be deployed in different environments and configurations.","sidebar":"Sidebar"},"server/architecture/overview":{"id":"server/architecture/overview","title":"Architecture Overview","description":"This document provides a high-level overview of the Lost City Server architecture, illustrating how different components interact to create a complete RuneScape 2 emulation system.","sidebar":"Sidebar"},"server/components/cache-management":{"id":"server/components/cache-management","title":"Cache Management","description":"The Cache Management system is responsible for loading, managing, and providing access to game assets such as models, maps, sprites, and animations. This document describes how the Cache system works and how it interacts with other components.","sidebar":"Sidebar"},"server/components/content-systems":{"id":"server/components/content-systems","title":"Content Systems","description":"The Content Systems are responsible for managing and compiling game content defined through RuneScript files, including quests, dialogues, interactions, and game elements. This document describes how the Content Systems work and how they interact with other components.","sidebar":"Sidebar"},"server/components/server-components":{"id":"server/components/server-components","title":"Server Components","description":"The Server Components handle specific game systems such as login, friend lists, chat, and other player services. This document describes how these components work and how they interact with other parts of the system.","sidebar":"Sidebar"},"server/components/world-system":{"id":"server/components/world-system","title":"World System","description":"The World System is responsible for managing the game world, including map management, object placement, item spawning, and entity interactions. This document describes how the World System works and how it interacts with other components.","sidebar":"Sidebar"},"server/core-concepts/database-models":{"id":"server/core-concepts/database-models","title":"Database Models","description":"This document describes the database schema and models used in the Lost City Server for persisting player and game data.","sidebar":"Sidebar"},"server/core-concepts/game-engine":{"id":"server/core-concepts/game-engine","title":"Game Engine","description":"This document describes the core game engine system of the Lost City Server, including its architecture, components, and how it manages the game simulation.","sidebar":"Sidebar"},"server/core-concepts/network-protocol":{"id":"server/core-concepts/network-protocol","title":"Network Protocol","description":"This document describes the network protocol used by the Lost City Server for client-server communication, including packet structure, encoding, and handling.","sidebar":"Sidebar"},"server/core-concepts/runescript":{"id":"server/core-concepts/runescript","title":"RuneScript Language","description":"RuneScript is the scripting language used in the Lost City Server to define game content, logic, and behavior. This document provides an overview of the language, its syntax, and how it integrates with the server.","sidebar":"Sidebar"},"server/overview":{"id":"server/overview","title":"Server Overview","description":"The 2004Scape server is a TypeScript implementation of a RuneScape 2 emulation server as it was in May 2004. This document provides an overview of the server architecture, its components, and how they work together.","sidebar":"Sidebar"},"server/runescript/introduction":{"id":"server/runescript/introduction","title":"Introduction to RuneScript","description":"RuneScript is the custom scripting language used in 2004Scape to define game content and behavior. It\'s designed to be simple and focused on the specific needs of RuneScape content development.","sidebar":"Sidebar"},"style-guide":{"id":"style-guide","title":"Documentation Style Guide","description":"This guide outlines the documentation standards for the Lost City Server project. Following these guidelines ensures consistency across all documentation and makes it easier for contributors to understand and use the codebase.","sidebar":"Sidebar"}}}}')}}]);