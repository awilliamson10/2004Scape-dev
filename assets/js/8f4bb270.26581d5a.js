"use strict";(self.webpackChunk_2004_scape_dev=self.webpackChunk_2004_scape_dev||[]).push([[9430],{4646:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"server/core-concepts/network-protocol","title":"Network Protocol","description":"This document describes the network protocol used by the Lost City Server for client-server communication, including packet structure, encoding, and handling.","source":"@site/docs/server/core-concepts/network-protocol.md","sourceDirName":"server/core-concepts","slug":"/server/core-concepts/network-protocol","permalink":"/2004Scape-dev/server/core-concepts/network-protocol","draft":false,"unlisted":false,"editUrl":"https://github.com/awilliamson10/2004Scape-dev/tree/main/docs/server/core-concepts/network-protocol.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"Sidebar","previous":{"title":"Game Engine","permalink":"/2004Scape-dev/server/core-concepts/game-engine"},"next":{"title":"Database Models","permalink":"/2004Scape-dev/server/core-concepts/database-models"}}');var c=o(4848),r=o(8453);const i={sidebar_position:3},s="Network Protocol",d={},l=[{value:"Overview",id:"overview",level:2},{value:"Packet Structure",id:"packet-structure",level:2},{value:"Encoding and Decoding",id:"encoding-and-decoding",level:2},{value:"Connection Lifecycle",id:"connection-lifecycle",level:2}];function a(e){const n={em:"em",h1:"h1",h2:"h2",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"network-protocol",children:"Network Protocol"})}),"\n",(0,c.jsx)(n.p,{children:"This document describes the network protocol used by the Lost City Server for client-server communication, including packet structure, encoding, and handling."}),"\n",(0,c.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.em,{children:"Detailed network protocol overview coming soon"})}),"\n",(0,c.jsx)(n.h2,{id:"packet-structure",children:"Packet Structure"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.em,{children:"Packet structure documentation coming soon"})}),"\n",(0,c.jsx)(n.h2,{id:"encoding-and-decoding",children:"Encoding and Decoding"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.em,{children:"Encoding/decoding documentation coming soon"})}),"\n",(0,c.jsx)(n.h2,{id:"connection-lifecycle",children:"Connection Lifecycle"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.em,{children:"Connection lifecycle documentation coming soon"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>s});var t=o(6540);const c={},r=t.createContext(c);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);